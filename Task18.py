# Начиная в вершине треугольника и перемещаясь вниз на смежные числа, максимальная сумма до основания составляет 23.
#
#     3
#    7 4
#   2 4 6
#  8 5 9 3
#
# То есть, 3 + 7 + 4 + 9 = 23.
# Найдите максимальную сумму пути от вершины до основания следующего треугольника:
#
#                             75
#                           95  64
#                         17  47  82
#                       18  35  87  10
#                     20  04  82  47  65
#                   19  01  23  75  03  34
#                 88  02  77  73  07  63  67
#               99  65  04  28  06  16  70  92
#             41  41  26  56  83  40  80  70  33
#           41  48  72  33  47  32  37  16  94  29
#         53  71  44  65  25  43  91  52  97  51  14
#       70  11  33  28  77  73  17  78  39  68  17  57
#     91  71  52  38  17  14  91  43  58  50  27  29  48
#   63  66  04  68  89  53  67  30  73  16  69  87  40  31
# 04  62  98  27  23  09  70  98  73  93  38  53  60  04  23
#
# Примечание: Так как в данном треугольнике всего 16384 возможных маршрута от вершины до основания,
# эту задачу можно решить проверяя каждый из маршрутов. Однако похожая Задача 67 с треугольником,
# состоящим из сотни строк, не решается перебором (brute force) и требует более умного подхода! ;o)
import copy
from typing import List


DATA = """75
95 64
17 47 82
18 35 87 10
20 04 82 47 65
19 01 23 75 03 34
88 02 77 73 07 63 67
99 65 04 28 06 16 70 92
41 41 26 56 83 40 80 70 33
41 48 72 33 47 32 37 16 94 29
53 71 44 65 25 43 91 52 97 51 14
70 11 33 28 77 73 17 78 39 68 17 57
91 71 52 38 17 14 91 43 58 50 27 29 48
63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23"""

TEST_DATA = """3
7 4
2 4 6
8 5 9 3"""


def get_max_route(triangle: List[List[int]]) -> int:
    """ len(triangle[i]) == i+1 """

    routes = copy.deepcopy(triangle)
    n = len(routes)
    
    for i in range(1, n):
        routes[i][0] += routes[i-1][0]
        last_index = len(routes[i]) - 1
        routes[i][last_index] += routes[i-1][last_index-1]
        
        for j in range(1, last_index):
            routes[i][j] += routes[i-1][j-1] if routes[i-1][j-1] > routes[i-1][j] else routes[i-1][j]

    return max(routes[n-1])


if __name__ == '__main__':
    triangle_data = [[int(i) for i in s.split()] for s in DATA.split('\n')]
    print(get_max_route(triangle_data))
